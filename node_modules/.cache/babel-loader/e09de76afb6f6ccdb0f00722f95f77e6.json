{"ast":null,"code":"var _jsxFileName = \"/Users/eunjungnam/keeper-app/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n\n  function addNote(newNote) {\n    setNotes(prevNotes => {\n      return [...prevNotes, newNote];\n    });\n  }\n\n  function deleteNote() {\n    setNotes(prevNotes => {\n      prevNotes.filter(() => {});\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateArea, {\n      onAdd: addNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), notes.map(note => {\n      return /*#__PURE__*/_jsxDEV(Note, {\n        title: note.title,\n        content: note.content,\n        delete: deleteNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GQLmJKrKSWtt27ULSmYSMpXke/c=\");\n\n_c = App;\nexport default App; //CHALLENGE:\n//1. Implement the add note functionality.\n//- Create a constant that keeps track of the title and content.\n//- Pass the new note back to the App.\n//- Add new note to an array.\n//- Take array and render seperate Note components for each item.\n//2. Implement the delete note functionality.\n//- Callback from the Note component to trigger a delete function.\n//- Use the filter function to filter out the item that needs deletion.\n//- Pass a id over to the Note component, pass it back to the App when deleting.\n//This is the end result you're aiming for:\n//https://pogqj.csb.app/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/eunjungnam/keeper-app/src/components/App.js"],"names":["React","useState","Header","Footer","Note","CreateArea","App","notes","setNotes","addNote","newNote","prevNotes","deleteNote","filter","map","note","title","content"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;;AAEA,WAASQ,OAAT,CAAiBC,OAAjB,EAA0B;AACxBF,IAAAA,QAAQ,CAAEG,SAAD,IAAe;AACtB,aAAO,CAAC,GAAGA,SAAJ,EAAeD,OAAf,CAAP;AACD,KAFO,CAAR;AAGD;;AAED,WAASE,UAAT,GAAsB;AACrBJ,IAAAA,QAAQ,CAACG,SAAS,IAAE;AAClBA,MAAAA,SAAS,CAACE,MAAV,CAAiB,MAAI,CAEpB,CAFD;AAGD,KAJO,CAAR;AAKA;;AAED,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEJ;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGF,KAAK,CAACO,GAAN,CAAWC,IAAD,IAAU;AACnB,0BACE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEA,IAAI,CAACC,KAAlB;AAAyB,QAAA,OAAO,EAAED,IAAI,CAACE,OAAvC;AAAgD,QAAA,MAAM,EAAEL;AAAxD;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KAJA,CAHH,eAQE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA7BQN,G;;KAAAA,G;AA+BT,eAAeA,GAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n\n  function addNote(newNote) {\n    setNotes((prevNotes) => {\n      return [...prevNotes, newNote];\n    });\n  }\n\n  function deleteNote() {\n   setNotes(prevNotes=>{\n     prevNotes.filter(()=>{\n       \n     })\n   })\n  }\n\n  return (\n    <div>\n      <Header />\n      <CreateArea onAdd={addNote} />\n      {notes.map((note) => {\n        return (\n          <Note title={note.title} content={note.content} delete={deleteNote} />\n        );\n      })}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n\n//CHALLENGE:\n//1. Implement the add note functionality.\n//- Create a constant that keeps track of the title and content.\n//- Pass the new note back to the App.\n//- Add new note to an array.\n//- Take array and render seperate Note components for each item.\n\n//2. Implement the delete note functionality.\n//- Callback from the Note component to trigger a delete function.\n//- Use the filter function to filter out the item that needs deletion.\n//- Pass a id over to the Note component, pass it back to the App when deleting.\n\n//This is the end result you're aiming for:\n//https://pogqj.csb.app/\n"]},"metadata":{},"sourceType":"module"}